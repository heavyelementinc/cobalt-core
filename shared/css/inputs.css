h1:has(action-menu) {
  display:flex;
  justify-content: space-between;
}

.close-glyph {
  color: inherit;
  font-family: 'Material Design Icons', sans-serif;
  font-weight: 900;
  font-size: 18pt;
  cursor: pointer;
}

.close-glyph:before {
  content:"\F05AD";
}

/** Inputs */
input-wrapper {
  display: inline-flex;
}

/* input-wrapper, input-text, input-user, input, textarea, input-password, button[native], [role='button'], action-menu, split-field  */
input, textarea, button[native], async-button[native], a.button[native], [role='button'], [__custom-input] {
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-background);
  padding: .4rem;
  border-radius: 4px;
  font-size: 1.1rem;
  color: var(--project-color-input-text-color);
}

input[type='color'] {
  padding: .1rem;
}

  :is(input-wrapper, input-password) :is(input, button) {
    border: unset;
    background: unset;
    padding: 0;
    border-radius: unset;
  }

  :is(input-wrapper, input-password) input:focus {
    border: unset;
  }

  /* input[invalid],
  textarea[invalid],
  :is(input-wrapper, input-password, input-text) input[invalid]
  input-array[invalid]  */
  :is(input, textarea, button[native], [role='button'], [__custom-input])[aria-invalid="true"]{
    border: 1px solid var(--project-color-input-invalid-border);
    background: var(--project-color-input-invalid-bg);
  }

  validation-issue.form-request--field-issue-message{
    background: var(--project-color-input-invalid-border);
    color: var(--project-color-input-invalid-label-text);
    font-size: .9rem;
    padding: .2rem;
    white-space: pre-line;
    box-shadow: var(--project-box-shadow);
    position: absolute;
    box-sizing: border-box;
    margin: 0;
  }
  
  .form-request--issue-fade-in {
    opacity:0;
    transform:translateX(-20%);
    animation: issueFadeIn 250ms 1 forwards ease-out running 300ms;
  }

  .form-request--issue-fade-out {
    animation: issueFadeIn 500ms 1 forwards ease-out running reverse;
  }

  @keyframes issueFadeIn{
    to{
      opacity: 1;
      transform: none;
    }
  }

  :is(input-wrapper, input-password):focus-within,input:focus{
    border: 1px solid var(--project-color-input-border-focus);
  }

  input::placeholder, textarea::placeholder, input + .placeholder {
    color: var(--project-color-input-border-nofocus);
  }

  input + .placeholder {
    background: transparent;
    position: absolute;
    transition: top 300ms, left 300ms, color 300ms, font-size 300ms;
    top:10px;
    left:10px;
    opacity: 1;
  }

  :focus-within .placeholder,
  input::not(:placeholder-shown) + .placeholder,
  textarea::not(:placeholder-shown) + .placeholder
  {
    color: var(--project-color-input-border-focus);
    background: var(--project-color-input-background);
    font-weight: bold;
    top:5px;
    left:5px;
  }

  textarea:focus::placeholder,
  input:focus::placeholder {
    color: var(--project-color-input-border-focus);
  }

input:focus, textarea:focus {
  background: var(--project-color-input-background-focus);
  box-shadow: none;
}

input:disabled, textarea:disabled, markdown-area[aria-disabled="true"], markdown-area[aria-disabled="true"] .CodeMirror {
  background: var(--project-color-input-disabled);
}

div.image-field {
  display: flex;
  flex-direction: column;
}

div.upload-field {
  
}

div.upload-field img{
  width: 210px;
  height: 210px;
  object-fit: contain;
}

.image-field--container {
  font-size: .8em;
}
  



/** BUTTON LINKS **/

.button, button, [role='button'] {
  --btn-normal: var(--project-color-button-init);
  --btn-text: var(--project-color-button-text);
  --btn-hover: var(--project-color-button-hover);
  --btn-hover-text: var(--project-color-button-hover-text);
  background-color: var(--btn-normal);
  color: var(--btn-text);
  padding: .7rem 1.4rem;
  border-radius: 2rem;
  font-weight: bold;
  text-decoration: none;
  font-size: 1.1rem;
  white-space: nowrap;
  box-sizing: border-box;
}

.button,[role='button'] {
  border-radius: 0;
  border: 1px solid var(--project-color-input-border-nofocus);
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: normal;
  user-select: none;
}

:is(.button, button, [role='button']) loading-spinner{
  font-size: 1em;
  height: 1em;
  width: 1em;
}

:where(a.button) {
  color: var(--btn-text);
}

.button.light-alt {
  --btn-normal: rgba(255, 255, 255, .8);
  --btn-text: #000;
  --btn-hover: #FFF;
  --btn-hover-text: #000;
  border: 1px solid;
}

.button.dark-alt {
  --btn-normal: #000;
  --btn-text: #FFF;
  --btn-hover: #101010;
  --btn-hover-text: #FFF;
  border: 1px solid;
}

.button:hover,button:hover, action-menu:hover, [role='button'] {
  background-color: var(--btn-hover);
  color: var(--btn-hover-text);
}

/* .button */

.lightbox-item {
  cursor: pointer;
}

.lightbox-zoom {
  cursor: zoom-in;
}

input-binary {
  display: inline-flex;
  
}

input-binary option {
  display: none;
}

input-binary tag-container button {
  display: grid;
  place-items: center;
  pointer-events: auto;
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-background-focus);
}

input-binary[readonly] {
  background: var(--project-color-input-disabled);
}

input-binary[readonly] button {
  pointer-events: none;
}

input-binary tag-container :is(button)[aria-pressed='true'] {
  border: 1px solid var(--project-color-input-border-focus);
  background: var(--project-color-input-background);
}

:is(input-array, input-user-array){
  display: inline-flex;
  flex-direction: column;
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-background);
  padding: 0;
  border-radius: 4px;
  font-size: 1.1rem;
  overflow: hidden;
  box-sizing: border-box;
}

  fieldset > :is(input-array, input-user-array){
    width: 100%;
  }

  :is(form-request) :is(input-array, input-user-array) fieldset,
  :is(input-array, input-user-array) fieldset{
    display: flex;
    flex-wrap: wrap;
    flex-grow:1;
    min-height: 2rem;
    /* border: 0; */
    border-bottom: 1px solid var(--project-color-input-border-nofocus);
    background: var(--project-color-input-disabled);
    margin: 0;
    padding:.4rem;
    gap: .4rem;
    max-width: 100%;
  }

  :is(input-array:disabled,input-array[disabled], input-user-array[disabled]) :is(.autocomplete--search-container, input-array-tag) {
    background-color: var(--project-color-input-disabled);
    pointer-events: none;
  }

  :is(input-array:disabled, input-array[disabled], input-user-array[disabled]) :is(input-array-tag input[type="button"]) {
    display: none;
  }

  :is(input-array, input-user-array) fieldset:empty{
    text-align: center;
  }

  :is(input-array, input-user-array) fieldset:empty:before{
    content:"Use the field below to add items to this list";
    font-style:italic;
    opacity: .6;
    font-size: .6em;
  }

  :is(input-array, input-user-array) input[type="search"]{
    border: none;
    border-radius: unset;
    font-size: .9rem;
    background-color: inherit;
    margin:0;
  }

  :is(input-array, input-user-array) input[type="search"]:focus{
    background: var(--project-color-input-background);
  }

  .autocomplete--search-container {
    display:flex;
    flex-direction:row;
    background: var(--project-color-input-background);
    cursor: text;
    padding:none;
  }

  .autocomplete--search-container:focus-within {
    outline: 1px solid var(--project-color-input-border-focus);
  }

  .autocomplete--search-container input[type='search'] {
    width:100%;
  }

  :is(input-array, input-user-array) optgroup, :is(input-array, input-user-array) option{
    display: none;
  }

   .input-array--search-results, autocomplete-results-container{
    display: block;
    font-size: .9rem;
    padding: .2rem;
    margin:0;
    list-style: none;
    position:absolute;
    background: var(--project-color-input-background);
    border: 1px solid var(--project-color-input-border-nofocus);
    border-top: none;
    width: calc(100% - .2rem);
    top:100%;
    left:.1rem;
    z-index: calc(var(--project-modal-z-index) + 100);
    box-sizing: border-box;
  }

  .input-array--search-results:empty, autocomplete-results-container:empty{
    display:none;
  }

   .input-array--search-results li, autocomplete-results-container li{
    padding: .2rem;
    border: 1px solid transparent;
    box-sizing: border-box;
  }

  .input-array--search-results li+li, autocomplete-results-container li+li{
    margin-top: .1rem;
  }

   .input-array--search-results li:hover,
   .input-array--search-results li:focus,
   .input-array--search-results li.input-array--will-select-on-enter,
   autocomplete-results-container li:hover,
   autocomplete-results-container li:focus,
   autocomplete-results-container li.input-array--will-select-on-enter {
    background: var(--project-color-input-disabled);
    border:1px solid var(--project-color-input-border-nofocus);
    cursor:pointer;
    color:black;
  }

  li.input-array--list-custom,
  li.autocomplete--list-custom{
    font-weight: bold;
  }

  li.input-array--list-custom:not(.input-array--will-select-on-enter),
  li.autocomplete--list-custom:not(.input-array--will-select-on-enter){
    color:var(--project-color-input-border-nofocus);
  }

   li.input-array--list-custom:before,
   li.autocomplete--list-custom:before{
    content: "+";
    margin: 0 0.4rem 0 .2rem;
    font-weight: bold;
    color: white;
    background: var(--project-color-input-border-nofocus);
    border-radius: 50%;
    width: 1rem;
    display: inline-flex;
    height: 1rem;
    text-align: center;
    justify-content: center;
    align-items: center;
  }

input-array-item,
input-array-tag{
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-background);
  border-radius: 4px;
  font-size: 1rem;
  overflow: hidden;
}

  input-array-item span,
  input-array-tag label{
    margin: 0 .3rem;
  }

  input-array-item input[type='button'],
  input-array-tag input[type='button'],
  input-user > button{
    font-size: .8rem;
    color: var(--project-color-input-border-nofocus);
    border: none;
    border-left: 1px solid var(--project-color-input-border-nofocus);
    border-radius: unset;
    margin: 0;
    height: 100%;
  }

  input-array-tag input[type='button']:hover,
  input-user > input[type='button'] {
    background-color:var(--project-color-problem);
    color:white;
  }

input-object-array {
  display: flex;
  flex-wrap: wrap;
  min-height: 2rem;
  position: inherit;
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-disabled);
  margin: 0;
  padding: .4rem;
  max-width: 100%;
  border-radius: 4px;
  gap: .4rem;
}
  input-object-array var{
    display: none;
  }

  input-object-array .input-object-array--add-button{
    margin-left:auto;
  }


.floater--new-item{
  position:fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  bottom: 2rem;
  right: 2rem;
  box-sizing: border-box;
  border: none;
  background: var(--project-color-button-init);
  color: var(--project-color-button-text);
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
}

a.floater--new-item{
  text-decoration: none;
}

  .floater--new-item:hover{
    background:var(--project-color-button-hover);
    /* color:var(--project-color-button-hover-text); */
  }

  .floater--new-item:visited {
    color: var(--project-color-button-text);
  }

  .floater--new-item:focus{
    background: var(--project-color-button-pressed);
  }

  .floater--new-item::before{
    content: "+";
    font-weight: bolder;
    font-size: 2.5rem;
  }

progress-bar {
  display: block;
  position: relative;
  width: 100%;
  height: 1rem;
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-disabled);
  /* border-radius: 4rem; */
  overflow:hidden;
}

progress-bar::before{
  content:"";
  height:100%;
  width:100%;
  position: absolute;
  top:0;
  left:0;
  background-image: linear-gradient(
    90deg,
    var(--project-body-background) 0%,
    var(--project-color-input-border-nofocus) 40%,
    var(--project-color-input-border-nofocus) 70%,
    var(--project-body-background) 100%
  );
  background-repeat: none;
  background-color: var(--project-body-background);
  background-size: 100% 100%;
  animation: progressBarIdle 1s linear infinite;
  transition: height 600ms ease-out;
}

progress-bar.spa-loading-indicator {
  border: none;
  position: fixed;
  top: -100%;
  left: 0;
  opacity: 0;
  transition: top .5s, opacity .5s;
  z-index: calc(var(--project-modal-z-index) * 100);
  pointer-events: none;
}

.form-request--processing progress-bar{
  max-width: 50%;
  margin: 10px auto;
}

progress-bar .progress-bar--indicator{
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0;
  background: var(--project-color-button-init);
  transition: width 400ms ease-out;
  border-radius: 6px;
}

@keyframes progressBarIdle{
  0% {
    background-position: 0px 0px;
  }
  100% {
    background-position: 100vw 0;
  }
}

.cobalt-query-controls {
  display: flex;
  text-align: center;
  justify-content: center;
  align-items: center;
}

.cobalt-query-controls .page-controls {
  font-size: 1.3em;
}

.cobalt-query-controls button {
  border: none;
  background-color: var(--project-calendar-cell-txt);
  border-radius: 50%;
  width: 50px;
  height:50px;
  color: var(--project-calendar-cell-bg);
  font-size: 1.5rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.cobalt-query-controls :is(:disabled, [disabled="disabled"], [disabled]) {
  opacity: .2;
  pointer-events: none;
}

input-password {
  display: flex;
  padding: unset;
  flex-grow: 1;
}

input-password > input {
  padding: .2rem;
  margin: 0;
  width:100%;
}

input-password > button {
  background: transparent;
  border: unset;
  padding: 0 .4rem;
}

input-password > button:hover {
  background: transparent;
}

input-password > input + button:before {
  content: "\F06D1";
  color: var(--project-color-input-border-nofocus);
  font-family: "Material Design Icons";
}

input-password > button:hover:before{
  color: black;
}

input-password > input[type='password'] + button:before {
  content: "\F0208";
}


.cobalt-sortable--drop-indicator {
  display: inline-block;
  width: 4px;
  color: var(--project-color-active);
  background-color: var(--project-color-active);
  padding: 4px;
}

.cobalt--fs-directory-listing {
  display: flex;
  flex-wrap: wrap;
}

.cobalt-sortable--current-drag-item {
  opacity: .2;
}


progress.spa-loading-indicator {
  width: 100%;
  height: 15px;
  box-sizing: border-box;
  position: fixed;
  left: 0;
  top: -25px;
  z-index: var(--project-modal-z-index);
  margin: unset;
  opacity: 0;
  pointer-events: none;
  /* -webkit-appearance: none; */
  accent-color: var(--project-color-input-border-nofocus);
  /* background-color: var(--project-color-input-disabled); */
}

progress.spa-loading-indicator.navigation-start {
  transition: top .5s, opacity .5s;
  z-index: calc(var(--project-modal-z-index) * 100);
  top: -4px;
  opacity: 1;
}

input-binary {
  display: inline-flex;
}

input-binary option {
  display: none;
}

input-binary tag-container button {
  all: revert;
  border: 1px solid var(--project-color-input-border-nofocus);
  background: var(--project-color-input-disabled);
  color: var(--project-color-input-border-nofocus);
  border-radius: .2rem;
  margin: .1rem;
  font-size: .8em;
}

input-binary tag-container button:before {
  content: "";
  display: inline-block;
  height: .6em;
  width: .6em;
  margin-right: .3em;
  border: 1px solid currentColor;
  border-radius: 50%;
  background-color: transparent;
}

input-binary tag-container button[aria-pressed='true'] {
  border: 1px solid var(--project-color-input-border-focus);
  background: #FFF;
    color: black;
}

input-binary tag-container button[aria-pressed='true']:before {
  background-color: currentcolor;
}

ol.binary-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

ol.binary-list li:not(.active){
  opacity: .2;
}

.crudable-header--hypermedia-container {
  display: grid;
  grid-template-columns: 1fr 20ch 1fr;
  justify-content: space-between;
  margin-bottom: 0.2em;
}
  .crudable-header--section {
    display: flex;
    gap: 0.2em;
    align-items: center;
  }

  a.hypermedia--page-select {
    font-weight: bold;
    font-size: 1.6em;
  }

  .crudable-header--left {
    grid-column: 1 / span 1;
    justify-self: start;
  }

  .crudable-header--center {
    grid-column: 2 / span 1;
    justify-self: center;
  }

  .crudable-header--right {
    grid-column: 3 / span 1;
    justify-self: right;
  }

@media only screen and (max-width: 35em) {
  .crudable-header--hypermedia-container {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.2em;
    flex-wrap: wrap;
  }
    .crudable-header--right{
      width: 100%;
    }
    .crudable-header--hypermedia-container .search-form {
      display: flex;
      margin-top: 0.2em;
      gap: 0.2em;
      flex-grow: 1;
    }
      .crudable-header--hypermedia-container .search-form input[type='search'] {
        flex-grow: 1;
      }
}