/*  Setting Definitions
    ===================

    This document provides a default value for every setting included in the
    Cobalt Engine as well as an optional list of directives (denoted by a $ 
    prepending their name) for each setting.
 
    These optional directives provide a list of instructions to the 
    SettingsManager which allows for dynamic assignment of setting properties 
    across both the default and app-specific settings.
 
    A full list of directives can be found in the SettingsManger documentation.
 
    At runtime, settings are stored in the __APP_SETTINGS__ constant as well as
    $GLOBALS['app']->settings (an instance of SettingsManger\Settings())
 
    After any settings file is modified, the next request will initiate the
    "compilation" process and the computed values of every setting will be
    cached for later reference until any settings file is modified again.
*/
{
    /* Provide a doman name that we expect to be listening for. This will later 
    be used to add CORS headers. */
    "domain_name": {
        "default": "",
        "meta": {
            "group": "Basic",
            "subgroup": "General",
            "name": "Domain Name",
            "type": "input"
        },
        "validate": {
            "confirm": "If you change this value, you may lose access to this page and will need to manually change the value to regain access.",
            "filter": {
                "FILTER_VALIDATE_URL": []
            }
        }
    },
    /* The full name of the application. */
    "app_name": {
        "default": "Cobalt Engine",
        "directives": {
            "public": true
        },
        "meta": {
            "group": "Basic",
            "subgroup": "General",
            "name": "Application Name",
            "type": "input"
        }
    },
    /* A shortened name for the application. */
    "app_short_name": {
        "default": "",
        "directives": {
            "alias": "app_name",
            "subgroup": "Details",
            "public": true
        },
        "meta": {
            "group": "Basic",
            "name": "Short Name",
            "type": "input"
        }
    },
    /* A bespoke name to be listed in the copyright notice */
    "app_copyright_name": {
        "default": "",
        "meta": {
            "group": "Basic",
            "subgroup": "Details",
            "name": "Copyright Name",
            "type": "input"
        },
        "directives": {
            "alias": "app_name"
        }
    },
    /* Debug routes include things like the WebComponent input tests */
    "enable_debug_routes": {
        "default": false,
        "meta": {
            "group": "Cache &amp; Debug",
            "name": "Enable debug routes",
            "type": "input-switch",
            "debug": true
        },
        "validate": {
            "type": "boolean"
        }
    },
    /* I don't think this does anything yet -GM */
    "route_cache_disabled": {
        "default": false,
        "meta": {
            "group": "Cache &amp; Debug",
            "name": "Route Cache Disabled",
            "type": "input-switch",
            "debug": true
        },
        "validate": {
            "type": "boolean"
        }
    },
    "cached_content_disabled": {
        "default": false,
        "meta": {
            "group": "Cache &amp; Debug",
            "name": "Cached Content Disabled",
            "type": "input-switch",
            "debug": true
        },
        "validate": {
            "type": "boolean"
        }
    },
    "settings_cache_disabled": {
        "default": false,
        "meta": {
            "group": "Cache &amp; Debug",
            "name": "Settings Cahce Disabled",
            "type": "input-switch",
            "debug": true
        },
        "validate": {
            "type": "boolean"
        }
    },
    /* Enabled the core-content/ route */
    "enable_core_content": {
        "default": true,
        "meta": {
            "group": "Cache &amp; Debug",
            "name": "Core Content Disabled",
            "type": "input-switch",
            "debug": true
        },
        "validate": {
            "type": "boolean"
        }
    },

    /* Fonts to be used. This can be referenced by the rendering engine for 
    email templates and more. */
    "fonts": {
        "default": [],
        // "definiiton": "Fonts",
        "directives": {
            "merge":  {
                "head": {
                    "family": "'Assistant', sans-serif",
                    "import": "Assistant:500,800"
                },
                "body": {
                    "family": "'Open Sans', sans-serif",
                    "import": "Open+Sans:400,400i,800,800i"
                }
            },
            "style": true
        }
        // "meta": {
        //     "group": "Look &amp; Feel",
        //     "name": "Default Fonts",
        //     "view": "/admin/settings/inputs/fonts.html"
        // }
    },
    "css-vars": {
        "default": [],
        "directives": {
            "merge": {
                
            },
            "style": true
        }
    },

    /* The name of the designer as well as their website and title text */
    "designer": {
        "default": {
            "prefix": "Designed by",
            "name":   "Heavy Element, Inc.",
            "href":   "https://heavyelement.io/",
            "title":  "Maine's Premier New Media Production Studio"
        },
        "meta": {
            "group": "Basic",
            "subgroup": "Details",
            "name": "Designer Credit",
            "view": "/admin/settings/inputs/designer.html"
        }
    },
    
    /* The image displayed when loading a page. */
    "login-hero-sidebar": {
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Sidebar Image",
            "type": "input"
        },
        "directives": {
            "style": true
        },
        "default": "/core-content/img/default_poster_image.jpg"
    },

    "API_CORS_allowed_origins": {
        "default": [],
        // "meta": {
        //     "group": "API",
        //     "name": "Allowed Origins",
        //     "type": "input-array"
        // },
        "directives": {
            "push": [
                "domain_name"
            ]
        }
    },
    // This was once allowed to be modified by the user in the Settings panel
    // but people could toggle it and then not be able to change it.
    "API_CORS_enable_other_origins": {
        "default": true
    },

    "CobaltEvents_enabled": {
        "default": true,
        "directives": {
            "public": true
        },
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Enable Event Banners <help-span value='Enables the Event Manager and allows you to schedule private & public pop-ups and banners.'></help-span>",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
    "CobaltEvents_database_collection": {
        // "meta": {
        //     "group": "Look &amp; Feel",
        //     "name": "Database Collection",
        //     "type": "input"
        // },
        "default": "CobaltEvents"
    },
    /* The id attribute of the body tag when errors happen in a web context. */
    "HTTP_error_body_id": {
        "default": "cobalt_http_error"
    },
    /** Mail **/

    "API_contact_form_enabled": {
        "default": false,
        "meta": {
            "group": "Features",
            "subgroup":"Contact Form",
            "name": "Enable Contact Form",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },

    
    "Contact_form_interface": {
        "default": "panel",
        "meta": {
            "group": "Features",
            "subgroup":"Contact Form",
            "name": "Contact Form Backend",
            "type": "select"
        },
        "validate": {
            "type": "string",
            "options": {
                "panel": "Admin Panel",
                "SMTP": "Email"
            }
        }
    },

    "Contact_form_submission_throttle": {
        "default": 500,
        "meta": {
            "group": "Features",
            "subgroup":"Contact Form",
            "name": "Minumum number of seconds between contact form submissions (based on IP address)",
            "type": "input"
        },
        "validate": {
            "type": "int"
        }
    },

    "Contact_form_success_message": {
        "default": "Confirmed! Your info has been saved and someone should be reaching out to you soon!",
        "meta": {
            "group": "Features",
            "subgroup":"Contact Form",
            "name": "Contact Form Success Message",
            "type": "input"
        },
        "validate": {
            "type": "string"
        }
    },
    
    "Contact_form_notify_on_new_submission": {
        "default": false,
        "meta": {
            "group": "Features",
            "subgroup":"Contact Form",
            "name": "Send admins a notification when new notifications are received",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },

    "Notifications_system_enabled": {
        "default": true,
        "meta": {
            "group": "Features",
            "subgroup": "Notifications",
            "name": "Enable the notification system",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
    "Notifications_in_session_panel": {
        "default": true,
        "meta": {
            "group": "Features",
            "subgroup": "Notifications",
            "name": "Show notifications in the user's session panel",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
    "Notifications_collection": {
        "default": "CobaltNotifications"
    },
    

    "API_contact_form_recipient": {
        "default": "",
        "meta": {
            "group": "Configuration",
            "subgroup": "Contact Form",
            "name": "Contact Form Recipient",
            "type": "input"
        }
    },

    "Mail_username": {
        "default": "",
        "directives": {
            "env": "MAIL_USERNAME"
        },
        "meta": {
            "group": "Configuration",
            "subgroup": "Mail",
            "name": "SMTP Username",
            "type": "input"
        }
    },

    "Mail_password": {
        "default": "",
        "directives": {"env": "MAIL_PASSWORD"},
        "meta": {
            "group": "Configuration",
            "subgroup": "Mail",
            "name": "SMTP Password",
            "type": "password"
        },
        "validate": {
            "confirm": "Are you sure you want to update this password? Doing so will overwrite your current password!"
        }
    },

    "Mail_smtp_host": {
        "default": "",
        "directives":{
            "env": "MAIL_SMTP_HOST"
        },
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "SMTP Host",
            "type": "input"
        }
    },

    "Mail_port": {
        "default": 587,
        "directives":{"env": "MAIL_PORT"},
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "SMTP Port",
            "type": "number"
        },
        "validate": {
            "type": "int"
        }
    },
    
    "Mail_smtp_auth": {
        "default": true,
        "directives": {"env": "MAIL_AUTH"},
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "SMTP Auth Enabled",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },

    "Mail_reply_to_address": {
        "default": "",
        "directives":{"alias": "Mail_from_address"},
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "Reply To",
            "type": "input"
        },
        "validate": {
            "filter": {
                "FILTER_VALIDATE_EMAIL": {}
            }
        }
    },
    "Mail_reply_to_name": {
        "default": "",
        "directives":{"alias": "app_short_name"},
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "Reply To Name",
            "type": "input"
        }
    },
    
    "Mail_SMTP_options": {
        "default": {}
    },
    
    "Mail_from_address": {
        "default": "",
        "directives":{"alias": "Mail_username"},
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "From Address",
            "type": "input"
        }
    },
    "Mail_from_name": {
        "default": "",
        "directives":{"alias": "app_short_name"},
        "meta": {
            "group": "Configuration",
            "subgroup":"Mail",
            "name": "From Name",
            "type": "input"
        }
    },
    
    



    "Cookie_consent_prompt": {
        "default": false,
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Cookie Consent Prompt",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },

    "Posts_enable_parallax": {
        "default": false,
        "directives":{
            "public": true
        },
        "meta": {
            "group": "Features",
            "subgroup": "Blog Posts",
            "name": "Enable Parallax for Blog Post Headline Images",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
    "enable_default_parallax": {
        "default": true,
        "directives":{
            "public": true
        },
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Enable Parallax <help-span value='Allows you to specify [parallax-mode=\"\"] attributes on elements in your pages.'></help-span>",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
    "Parallax_enable_debug": {
        "default": false,
        "directives":{
            "public": true
        },
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Enable Parallax Debug <help-span value='Allows the scroll manager to display debug output to help troubleshoot parallax issues.'></help-span>",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
       /* If true, the settings will be cached after being processed and the cache 
    will only be updated if any of the settings files are modified. */
    "cache_settings": {
        "default": true
    },
    /* The version number of our application. Used most frequently as a 
    cache break */
    "version": {
        "default": "0.0"
    },
    /* API Routes consist of prefixes for URI path names. These prefixes are 
    used to load the appropriate routing table and tell the engine which 
    processor to use to handle the request. */
    "context_prefixes": {
        "default": {},
        "directives":{
            "prepend": {
                "admin": {
                    "processor": "Handlers\\AdminHandler",
                    "prefix": "/admin/",
                    "exception_mode": "web",
                    "mode": "text/html",
                    "permission": "Admin_panel_access",
                    "session_refresh": true,
                    "api_access": true,
                    "vars": {
                        "html_class": "admin-panel"
                    }
                },
                "debug": {
                    "processor": "Handlers\\WebHandler",
                    "prefix": "/debug/",
                    "exception_mode": "web",
                    "mode": "text/html",
                    // "permission": "Debug_access",
                    "session_refresh": true,
                    "api_access": true,
                    "vars": {
                        "html_class": "debug-panel"
                    }
                },
                "init": {
                    "processor": "Handlers\\WebHandler",
                    "mode": "application/json",
                    "session_refresh": false,
                    "api_access": false,
                    "prefix": null
                },
                "shared": {
                    "processor": "Handlers\\SharedHandler",
                    "mode": "application/json",
                    "session_refresh": false,
                    "api_access": false,
                    "prefix": "/core-content/"
                },
                "apinotifications": {
                    "processor": "Handlers\\ApiHandler",
                    "mode": "application/json",
                    "session_refresh": false,
                    "api_access": false,
                    "prefix": "/api/notifications/"
                },
                "apiv1": {
                    "processor": "Handlers\\ApiHandler",
                    "mode": "application/json",
                    "session_refresh": false,
                    "api_access": false,
                    "prefix": "/api/v1/"
                },
                "webhookv1": {
                    "processor": "Handlers\\ApiHandler",
                    "mode": "application/json",
                    "session_refresh": false,
                    "api_access": false,
                    "prefix": "/webhook/v1/"
                },
                "streams": {
                    "processor": "Handlers\\ApiHandler",
                    "mode": "application/json",
                    "session_refresh": false,
                    "api_access": false,
                    "prefix": "/streams/"
                },
                "web": {
                    "processor": "Handlers\\WebHandler",
                    "exception_mode": "web",
                    "mode": "text/html",
                    "session_refresh": true,
                    "api_access": true,
                    "prefix": "/",
                    "vars": {
                        "html_class": "cobalt-app"
                    }
                }
            }
        }
    },
    "default-color-scheme": {
        "default": "light"
    },
    "opengraph": {
        "directives": {
            "merge": {
                "type": "website",
                "image": "/core-content/img/branding/cobalt-logo.svg",
                "image_X": 500,
                "image_Y": 500,
                "description": "Cobalt engine is a fast, lightweight, and simple MVC-based framework written in PHP. Find out more at heavyelement.io"
            }
        }
    },
    "pwa": {
        "default": {
            "display": "standalone",
            "background_color": "#000"
        }
    },
    "session_cookie_name": {
        "default": "token_session" // Changing this in production will log everyone out.
    },
    "session_secure_status": {
        "default": true,
        "directives": {
            "env": "SESSION_SECURE"
        }
    },
    "loading_spinner": {
        "default": "dashes",
        "directives": {
            "public": true
        }
    },
    /* The CSRF seed is a secret string that is prepended to the client's 
    session cookie to form a unique "password". This password is then encrypted
    and sent to the client as the CSRF Token. */
    "csrf_seed": {
        "default": ""
    },
    "Plugin_enable_plugin_support": {
        "default": true
    },
    "Plugin_enabled_plugins": {
        "default": []
    },
    "Plugin_blacklisted_plugins": {
        "default": []
    },
    /* If a route has not specified if it needs a CSRF token, this will be the
    default value supplied for its router table entry */
    "Router_csrf_required_default": {
        "default": true
    },
    "SPA": {
        "default": true,
        "directives": {
            "public": true
        }
    },
    "SPA_smooth_scroll_on_nav": {
        "default": false,
        "directives": {
            "public": true
        }
    },
    "Web_privacy_policy": {
        "default": "",
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Path to Privacy Policy",
            "type": "input"
        }
    },
    "Web_terms_of_service": {
        "default": "",
        "meta": {
            "group": "Look &amp; Feel",
            "name": "Path to Terms of Service",
            "type": "input"
        }
    },
    "Web_normally_open_pages": {
        "default": true
    },
    "Web_main_content_via_api": {
        "default": true
    },
    "Web_display_designer_credit": {
        "default": true
    },
    "Render_strict_variable_parsing": {
        "default": false
    },
    /* A meta setting which will disable ALL user account settings. Anything
    that requires privileges, has to do with user accounts, or sessions should
    "$required": {"Auth_user_accounts_enabled": true} */
    "Auth_user_accounts_enabled": {
        "default": true
    },
    "Auth_require_verified_status": {
        "default": true
    },
    "Auth_allow_password_reset": {
        "default": true
        // Allows public password resets
    },
    "Admin_panel_prefix": {
        "default": "/admin"
    },
    "Admin_panel_access": {
        "default": true,
        "directives": {   
            "required": {
                "Auth_user_accounts_enabled": {"is": true}
            }
        }
    },
    "Auth_min_password_length": {
        "default": 6
    },
    "Auth_logins_enabled": {
        "default": true,
        "directives": {   
            "required": {
                "Auth_user_accounts_enabled": {"is": true}
            }
        }
    },
    "Auth_enable_insecure_logins": {
        "default": true
    },
    "Auth_session_panel_enabled": {
        "default": true,
        "directives": {
            "required": {
                "Auth_user_accounts_enabled": {"is": true}
            }
        }
    },
    "Auth_user_menu_enabled": {
        "default": true,
        "directives": {   
            "required": {
                "Auth_user_accounts_enabled": {"is": true}
            }
        }
    },
    "Auth_account_creation_enabled": {
        "default": false,
        "directives": {   
            "required": {
                "Auth_user_accounts_enabled": {"is": true}
            }
        }
    },
    "Auth_login_page": {
        "default": "/login",
        "directives": {   
            "required": {
                "Auth_user_accounts_enabled": {"is": true},
                "on_fail_value": ""
            },
            "public": true
        }
    },
    "Auth_onboading_url": {
        "default": "/onboarding"
    },
    "Auth_enable_root_group": {
        /* THIS IS DANGEROUS. ENABLING MEMBERSHIP IN THE ROOT GROUP WILL BYPASS 
        *ALL* PERMISSIONS CHECKS FOR ROOT MEMBERS!!! */
        "default": true
    },
    "Auth_session_days_until_expiration": {
        "default": 90
    },
    "Renderer_parse_for_multiline_functions": {
        // When true, the trailing semicolon is REQUIRED.
        "default": false
    },
    "Mobile_nav_menu_closes_on_anchor_link_click": {
        "default": true,
        "directives": {   
            "public": true
        }
    },
    "UGC_enable_user_generated_content": {
        "default": false
    },
    "UGC_retrieval_endpoint": {
        "default": "/ugc",
        "directives": {   
            "public": true
        }
    },
    "UCG_database_collection": {
        "default": "ugc"
    },
    "UGC_directory": {
        "default": "/ugc"
    },
    "Posts": {
        "directives": {   
            "merge": {
                "default_enabled": false,
                "collection_name": "CobaltPosts",
                "default_name": "Posts",
                "public_index": "/posts",
                "public_index_options": {
                    "anchor": {"name": "Posts"},
                    "navigation": ["main_navigation"]
                },
                "public_post": "/posts/{id}",
                "public_post_options": {}
            }
        },
        "meta": {
            "group": "Features",
            "subgroup": "Blog Posts",
            "view": "/admin/settings/inputs/posts.html"
        }
    },
    "Posts_enable_rss_feed": {
        "default": true,
        "meta": {
            "group": "Features",
            "subgroup": "Blog Posts",
            "name": "Enable Post RSS Feed",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },
    "Posts_rss_feed_name": {
        "default": "RSS Feed",
        "directives": {
            "alias": "app_name"
        },
        "meta": {
            "group": "Features",
            "subgroup": "Blog Posts",
            "name": "Post RSS Name",
            "type": "input"
        },
        "validate": {
            "type": "string"
        }
    },
    "Posts_rss_feed_description": {
        "default": "A Cobalt Engine RSS Feed",
        "directives": {
            "alias": "app_name"
        },
        "meta": {
            "group": "Features",
            "subgroup": "Blog Posts",
            "name": "Post RSS Feed Description",
            "type": "textarea"
        },
        "validate": {
            "type": "string"
        }
    },
    "Posts_rss_feed_path": {
        "default": "/posts/feed/",
        "meta": {
            "group": "Features",
            "subgroup": "Blog Posts",
            "name": "Post RSS Feed Path",
            "type": "input"
        },
        "validate": {
            "type": "string"
        }
    },
    "Posts_default_index_display": {
        "default": "default"
    },
    /* 
    If debugging is TRUE, then a bunch of things happen. 
        - core/apiv1.php will add a HelloWorld route
        - HTTPExceptions used to display an B64 value of the exception message
    If debugging is FALSE, then:
        - The WebHandler will cache a concat of all JS files in `packages`
        - The WebHandler will cache a concat of all CSS files in `css-packages`
    */
    "debug": {
        "default": true,
        "definition": "Debug",
        "meta": {
            "group": "Cache &amp; Debug",
            "name": "Debug status",
            "type": "input-switch"
        },
        "validate": {
            "type": "boolean"
        }
    },

    "Database_fs_enabled": {
        "default": true
    },
    "Database_fs_public_endpoint": {
        "default": "/dbfs/"
    },
    "API_authentication_mode": {
        "default": "POST" // Set to "header" for legacy mode
    }
}
