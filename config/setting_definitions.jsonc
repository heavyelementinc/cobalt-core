/*  Setting Definitions
    ===================

    This document provides a default value for every setting included in the
    Cobalt Engine as well as an optional list of directives (denoted by a $ 
    prepending their name) for each setting.
 
    These optional directives provide a list of instructions to the 
    SettingsManager which allows for dynamic assignment of setting properties 
    across both the default and app-specific settings.
 
    A full list of directives can be found in the SettingsManger documentation.
 
    At runtime, settings are stored in the __APP_SETTINGS__ constant as well as
    $GLOBALS['app']->settings (an instance of SettingsManger\Settings())
 
    After any settings file is modified, the next request will initiate the
    "compilation" process and the computed values of every setting will be
    cached for later reference until any settings file is modified again.
*/
{
    /* Provide a doman name that we expect to be listening for. This will later 
    be used to add CORS headers. */
    "domain_name": {
        "default": ""
    },
    /* The full name of the application. */
    "app_name": {
        "default": "Cobalt Engine",
        "$public": true
    },
    /* A shortened name for the application. */
    "app_short_name": {
        "default": "",
        "$alt": "app_name",
        "$public": true
    },
    /* A bespoke name to be listed in the copyright notice */
    "app_copyright_name": {
        "default": "",
        "$alt": "app_short_name"
    },
    /* The name of the designer as well as their website and title text */
    "designer": {
        "default": {
            "name": "Heavy Element, Inc.",
            "href": "https://heavyelement.io/",
            "title": "Maine's Premier New Media Production Studio"
        }
    },
    /* If true, the settings will be cached after being processed and the cache 
    will only be updated if any of the settings files are modified. */
    "cache_settings": {
        "default": true
    },
    /* The version number of our application. Used most frequently as a 
    cache break */
    "version": {
        "default": "0.0"
    },
    /* If debugging is true, then a bunch of things happen. TODO: Document 
    all this. */
    "debug": {
        "default": true
    },
    /* API Routes consist of prefixes for URI path names. These prefixes are 
    used to load the appropriate routing table and tell the engine which 
    processor to use to handle the request. */
    "api_routes": {
        "default": {
            "admin": {
                "processor": "Web\\AdminHandler",
                "prefix": "/admin/",
                "permission": "Admin_panel_access"
            },
            "shared": {
                "processor": "Web\\SharedHandler",
                "prefix": "/core-content/"
            },
            "apiv1": {
                "processor": "Api\\ApiHandler",
                "prefix": "/api/v1/"
            },
            "webhookv1": {
                "processor": "Api\\ApiHandler",
                "prefix": "/webhook/v1/"
            }
        },
        "$merge": true
    },
    /* Debug routes include things like the WebComponent input tests */
    "enable_debug_routes": {
        "default": false
    },
    /* I don't think this does anything yet -GM */
    "route_cache_enabled": {
        "default": false
    },
    /* Enabled the core-content/ route */
    "enable_core_content": {
        "default": true
    },
    /* The name of our Mongo database */
    "database": {
        "default": ""
    },
    /* Our database user */
    "db_usr": {
        "default": ""
    },
    /* Our db user's password */
    "db_pwd": {
        "default": ""
    },
    /* Our default address. */
    "db_addr": {
        "default": "localhost:27017"
    },
    /* Our databse authentication string, if default is non-false */
    "database_authentication": {
        "default": false,
        "$combine": [
            "db_usr",
            ":",
            "db_pwd",
            "@"
        ]
    },
    /* Our total server address. */
    "server_address": {
        "default": "",
        "$combine": [
            "mongodb://",
            "database_authentication",
            "db_addr"
        ],
        "$env": "COBALT_MONGODB"
    },
    /* Fonts to be used. This can be referenced by the rendering engine for 
    email templates and more. */
    "fonts": {
        "default": {
            "head": {
                "family": "'Assistant', sans-serif",
                "import": "Assistant:500,800"
            },
            "body": {
                "family": "'Open Sans', sans-serif",
                "import": "Open+Sans:400,400i,800,800i"
            }
        },
        "$merge": true,
        "$style": true
    },
    /* Basic CSS variables we want included in our body. Can also be used for 
    email templates and more. */
    "css-vars": {
        "default": {
            "modal-z-index": 2000,
            "body-background": "#efefef",
            "color-header-branding": "#004BA8",
            "color-user-panel-button": "#342A21",
            "color-acknowledge": "#598B2C",
            "color-active": "#598B2C",
            "color-inactive": "#B1C1C0",
            "color-input-disabled": "#F4F6F6",
            "color-disabled": "rgba(0,0,0,.2)",
            "color-problem": "#FE5F55",
            "color-button-init": "#004BA8",
            "color-button-text": "#FFF",
            "color-button-hover": "#9DD1F1",
            "color-button-hover-text": "#000",
            "color-button-pressed": "#00377A"
        },
        "$merge": true,
        "$style": true
    },
    /* The image displayed when loading a page. */
    "login-hero-sidebar": {
        "default": "url(/core-content/img/default_poster_image.jpg)",
        "$style": true
    },
    /* A list of JS files to be concatenated, minified, and sent to the client
    with every page */
    "packages": {
        "default": [
            "global_functions.js",
            "InputComponents.js",
            "Modal.js",
            "TabbedUI.js",
            "Slideshow.js",
            "InputClasses.js",
            "FormRequest.js",
            "ApiFetch.js",
            "UserMenu.js",
            "Router.js",
            "main.js",
            "app.js"
        ],
        "$prepend": true // Prepend user packages (is that what we want to do?)
    },
    /* A list of CSS files to be concatenated, minified, and sent to the client
    with every page.
    
    TODO: Implement this. */
    "css_packages": {
        "default": [],
        "$merge": true // User's packages should come second.
    },
    "session_cookie_name": {
        "default": "token_session" // Changing this in production will log everyone out.
    },
    /* The CSRF seed is a secret string that is prepended to the client's 
    session cookie to form a unique "password". This password is then encrypted
    and sent to the client as the CSRF Token. */
    "csrf_seed": {
        "default": ""
    },
    /* If a route has not specified if it needs a CSRF token, this will be the
    default value supplied for its router table entry */
    "Router_csrf_required_default": {
        "default": true
    },
    "Web_normally_open_pages": {
        "default": true
    },
    "Web_main_content_via_api": {
        "default": true
    },
    "Render_strict_variable_parsing": {
        "default": false
    },
    /* A meta setting which will disable ALL user account settings. Anything
    that requires privileges, has to do with user accounts, or sessions should
    "$required": {"Auth_user_accounts_enabled": true} */
    "Auth_user_accounts_enabled": {
        "default": true
    },
    "Admin_panel_prefix": {
        "default": "/admin"
    },
    "Admin_panel_access": {
        "default": true,
        "$required": {
            "Auth_user_accounts_enabled": true
        }
    },
    "Auth_min_password_length": {
        "default": 6
    },
    "Auth_logins_enabled": {
        "default": true,
        "$required": {
            "Auth_user_accounts_enabled": true
        }
    },
    "Auth_enable_insecure_logins": {
        "default": true
    },
    "Auth_session_panel_enabled": {
        "default": true,
        "$required": {
            "Auth_user_accounts_enabled": true
        }
    },
    "Auth_user_menu_enabled": {
        "default": true,
        "$required": {
            "Auth_user_accounts_enabled": true
        }
    },
    "Auth_account_creation_enabled": {
        "default": false,
        "$required": {
            "Auth_user_accounts_enabled": true
        }
    },
    "Auth_login_page": {
        "default": "/login",
        "$required": {
            "Auth_user_accounts_enabled": true,
            "on_fail_value": ""
        },
        "$public": true
    },
    "Auth_onboading_url": {
        "default": "/onboarding"
    },
    "Auth_user_manager_individual_page": {
        "default": "/manage/user"
    },
    "Auth_enable_root_group": {
        /* THIS IS DANGEROUS. ENABLING MEMBERSHIP IN THE ROOT GROUP WILL BYPASS 
        *ALL* PERMISSIONS CHECKS FOR ROOT MEMBERS!!! */
        "default": false
    },
    "API_CORS_allowed_origins": {
        "default": [],
        "$push": [
            "domain_name"
        ]
    },
    /* The id attribute of the body tag when errors happen in a web context. */
    "HTTP_error_body_id": {
        "default": "cobalt_http_error"
    }
}