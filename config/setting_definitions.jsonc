/*  Setting Definitions
    ===================

    This document provides a default value for every setting included in the
    Cobalt Engine as well as an optional list of directives (denoted by a $ 
    prepending their name) for each setting.
 
    These optional directives provide a list of instructions to the 
    SettingsManager which allows for dynamic assignment of setting properties 
    across both the default and app-specific settings.
 
    A full list of directives can be found in the SettingsManger documentation.
 
    At runtime, settings are stored in the __APP_SETTINGS__ constant as well as
    $GLOBALS['app']->settings (an instance of SettingsManger\Settings())
 
    After any settings file is modified, the next request will initiate the
    "compilation" process and the computed values of every setting will be
    cached for later reference until any settings file is modified again.
*/
{
    /* Provide a doman name that we expect to be listening for. This will later 
    be used to add CORS headers. */
    "domain_name": {
        "manage": {
            "group": "Basic",
            "name": "Domain Name",
            "type": "input"
        },
        "default": ""
    },
    /* A bespoke name to be listed in the copyright notice */
    "app_copyright_name": {
        "manage": {
            "group": "Basic",
            "name": "Copyright Name",
            "type": "input"
        },
        "default": "",
        "$alt": "app_short_name"
    },
    /* The full name of the application. */
    "app_name": {
        "manage": {
            "group": "Basic",
            "name": "Application Name",
            "type": "input"
        },
        "default": "Cobalt Engine",
        "$public": true
    },
    /* A shortened name for the application. */
    "app_short_name": {
        "manage": {
            "group": "Basic",
            "name": "Short Name",
            "type": "input"
        },
        "default": "",
        "$alt": "app_name",
        "$public": true
    },
    /* The name of the designer as well as their website and title text */
    "designer": {
        "manage": {
            "group": "Look &amp; Feel",
            "name": "Designer Credit",
            "type": "input-object"
        },
        "default": {
            "prefix": "Designed by",
            "name": "Heavy Element, Inc.",
            "href": "https://heavyelement.io/",
            "title": "Maine's Premier New Media Production Studio"
        }
    },
    /* 
    If debugging is TRUE, then a bunch of things happen. 
        - core/apiv1.php will add a HelloWorld route
        - HTTPExceptions used to display an B64 value of the exception message
    If debugging is FALSE, then:
        - The WebHandler will cache a concat of all JS files in `packages`
        - The WebHandler will cache a concat of all CSS files in `css-packages`
    */
    "debug": {
        "manage": {
            "group": "Cache &amp; Debug",
            "name": "Debug status",
            "type": "input-switch"
        },
        "default": true
    },

    /* Debug routes include things like the WebComponent input tests */
    "enable_debug_routes": {
        "manage": {
            "group": "Cache &amp; Debug",
            "name": "Enable debug routes",
            "type": "input-switch"
        },
        "default": false
    },
    /* I don't think this does anything yet -GM */
    "route_cache_disabled": {
        "manage": {
            "group": "Cache &amp; Debug",
            "name": "Route Cache Disabled",
            "type": "input-switch"
        },
        "default": false
    },
    "cached_content_disabled": {
        "manage": {
            "group": "Cache &amp; Debug",
            "name": "Cached Content Disabled",
            "type": "input-switch"
        },
        "default": false
    },
    "settings_cache_disabled": {
        "manage": {
            "group": "Cache &amp; Debug",
            "name": "Settings Cahce Disabled",
            "type": "input-switch"
        },
        "default": false
    },
    /* Enabled the core-content/ route */
    "enable_core_content": {
        "manage": {
            "group": "Cache &amp; Debug",
            "name": "Core Content Disabled",
            "type": "input-switch"
        },
        "default": true
    },

    /* Fonts to be used. This can be referenced by the rendering engine for 
    email templates and more. */
    "fonts": {
        "manage": {
            "group": "Look &amp; Feel",
            "name": "Default Fonts",
            "type": "input-object"
        },
        "default": {
            "head": {
                "family": "'Assistant', sans-serif",
                "import": "Assistant:500,800"
            },
            "body": {
                "family": "'Open Sans', sans-serif",
                "import": "Open+Sans:400,400i,800,800i"
            }
        },
        "$merge": true,
        "$style": true
    },
    
    /* The image displayed when loading a page. */
    "login-hero-sidebar": {
        "manage": {
            "group": "Look &amp; Feel",
            "name": "Sidebar Image",
            "type": "input"
        },
        "default": "url(/core-content/img/default_poster_image.jpg)",
        "$style": true
    },
    "API_authentication_mode": {
        "default": false, // Set to "headers" for legacy mode
        "$public": true
    },
    "API_CORS_allowed_origins": {
        "manage": {
            "group": "API",
            "name": "Allowed Origins",
            "type": "input-array"
        },
        "default": [],
        "$push": [
            "domain_name"
        ]
    },
    "API_CORS_enable_other_origins": {
        "manage": {
            "group": "API",
            "name": "Enable Other Origins",
            "type": "input-switch"
        },
        "default": true
    },
    "API_contact_form_enabled": {
        "manage": {
            "group": "API",
            "name": "Enable Contact Form",
            "type": "input-switch"
        },
        "default": false
    },
    "API_contact_form_recipient": {
        "manage": {
            "group": "API",
            "name": "Contact Form Recipient",
            "type": "input"
        },
        "default": ""
    },
    "CobaltEvents_enabled": {
        "manage": {
            "group": "Banners &amp; Pop-ups",
            "name": "Enable Banners &amp; Pop-ups",
            "type": "input-switch"
        },
        "default": true,
        "$public": true
    },
    "CobaltEvents_database_collection": {
        // "manage": {
        //     "group": "Banners &amp; Pop-ups",
        //     "name": "Database Collection",
        //     "type": "input"
        // },
        "default": "CobaltEvents"
    },
    /* The id attribute of the body tag when errors happen in a web context. */
    "HTTP_error_body_id": {
        "default": "cobalt_http_error"
    },
    /** Mail **/
    "Mail_smtp_host": {
        "manage": {
            "group": "Mail",
            "name": "SMTP Host",
            "type": "input"
        },
        "default": "",
        "$env": "MAIL_SMTP_HOST"
    },
    "Mail_smtp_auth": {
        "manage": {
            "group": "Mail",
            "name": "SMTP Auth Enabled",
            "type": "input-switch"
        },
        "default": true,
        "$env": "MAIL_AUTH"
    },
    "Mail_SMTP_options": {
        "default": {}
    },
    "Mail_username": {
        "manage": {
            "group": "Mail",
            "name": "Username",
            "type": "input"
        },
        "default": "",
        "$env": "MAIL_USERNAME"
    },
    "Mail_from_address": {
        "manage": {
            "group": "Mail",
            "name": "From Address",
            "type": "input"
        },
        "default": "",
        "$alt": "Mail_username"
    },
    "Mail_from_name": {
        "manage": {
            "group": "Mail",
            "name": "From Name",
            "type": "input"
        },
        "default": "",
        "$alt": "app_short_name"
    },
    "Mail_reply_to_address": {
        "manage": {
            "group": "Mail",
            "name": "Reply To",
            "type": "input"
        },
        "default": "",
        "$alt": "Mail_from_address"
    },
    "Mail_reply_to_name": {
        "manage": {
            "group": "Mail",
            "name": "Reply To Name",
            "type": "input"
        },
        "default": "",
        "$alt": "app_short_name"
    },
    "Mail_password": {
        "manage": {
            "group": "Mail",
            "name": "Mail Password",
            "type": "input"
        },
        "default": "",
        "$env": "MAIL_PASSWORD"
    },
    "Mail_port": {
        "manage": {
            "group": "Mail",
            "name": "SMTP Port",
            "type": "input"
        },
        "default": 587,
        "$env": "MAIL_PORT"
    },
    "Cookie_consent_prompt": {
        "manage": {
            "group": "Banners &amp; Pop-ups",
            "name": "Cookie Consent Prompt",
            "type": "input-switch"
        },
        "default": false
    },

    "Posts_enable_parallax": {
        "manage": {
            "group": "Parallax",
            "name": "Enable Parallax for Blog Post Headline Images",
            "type": "input-switch"
        },
        "default": true
    },
    "enable_default_parallax": {
        "manage": {
            "group": "Parallax",
            "name": "Enable Parallax",
            "type": "input-switch"
        },
        "default": true,
        "$public": true
    },
    "Parallax_enable_debug": {
        "manage": {
            "group": "Parallax",
            "name": "Enable Parallax Debug",
            "type": "input-switch"
        },
        "default": false,
        "$public": true
    },

}
